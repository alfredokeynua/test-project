version: 0.2

phases:
  install:
    commands:
      # Install dependencies needed for running tests
      - npm install

      # Make sure we have GIT information as env variables
      - chmod +x ./code-build-extras.sh && ./code-build-extras.sh > __env_vars.sh && . ./__env_vars.sh && rm ./__env_vars.sh

      # Upgrade AWS CLI to the latest version
      #- pip install --upgrade awscli
#  pre_build:
#    commands:
      # Discover and run unit tests in the 'tests' directory
      #- npm test
  build:
    commands:
      - chmod +x ./scripts/build.sh
      - echo "OUTSIDE IS "
      - pwd
      - ./scripts/build.sh

      # Build for production
      - rm -rf node_modules
      - npm install --production

      # Remove unnecessary files
      - rm -rf .git
      - rm code-build-extras.sh
      - rm ci-cd.yaml
      - rm buildspec.yml
      - rm .gitignore
      - rm package.json
      - rm package-lock.json
      - rm README.md

      # Package source code to S3 and generate Output SAM template
      - aws cloudformation package --template-file $SAM_TEMPLATE_IN --s3-bucket "$S3_BUCKET" --s3-prefix "$S3_PREFIX/builds/$GIT_NAME" --output-template-file $SAM_TEMPLATE_OUT --kms-key-id $CODEBUILD_KMS_KEY_ID

      # Zip the deployable
      - zip $ZIP_NAME $SAM_TEMPLATE_IN $SAM_TEMPLATE_OUT

      # Upload the deployable
      - aws s3api put-object --bucket $S3_BUCKET --key "$S3_PREFIX/deployables/$ZIP_NAME" --body $ZIP_NAME --ssekms-key-id $CODEBUILD_KMS_KEY_ID --server-side-encryption aws:kms

      - |
        if expr "${GIT_PULL_REQUEST}" : "false" >/dev/null; then
          # THIS SHOULD NOT PRINT
          echo "NO ES PULL REQUEST"
        else
          echo "SI ES PULL REQUEST"
        fi
