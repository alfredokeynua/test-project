AWSTemplateFormatVersion: '2010-09-09'
Description: Example template that creates a CodePipeline and deploys a project cross accounts.
Parameters:
  DevelopmentAccountId:
    Description: AWS Development Account id
    Type: String
    Default: ""

  IntegrationAccountId:
    Description: AWS Integration Account id
    Type: String
    Default: ""

  StagingAccountId:
    Description: AWS Staging Account id
    Type: String
    Default: ""

  ProductionAccountId:
    Description: AWS Production Account id
    Type: String
    Default: ""

Conditions:
  CreateDevelopmentAccountPipeline: !Not [!Equals [ !Ref DevelopmentAccountId, "" ]]
  CreateIntegrationAccountPipeline: !Not [!Equals [ !Ref IntegrationAccountId, "" ]]
  CreateStagingAccountPipeline: !Not [!Equals [ !Ref StagingAccountId, "" ]]
  CreateProductionAccountPipeline: !Not [!Equals [ !Ref ProductionAccountId, "" ]]

Resources:

  # Create the CodeBuild project that will run each time a pull
  # request or push is made.
  # You will need to manually set the webhook through the AWS console
  # by editing this project and specifying the branch filter to '(dev|master|release-.*)'
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}"
      Description: !Sub "${AWS::StackName} CodeBuild project used by CodePipeline"
      EncryptionKey: !ImportValue "CI-CD-KMSKeyArn"
      ServiceRole: !ImportValue "CI-CD-CodeBuildServiceRoleArn"
      Source:
        Type: GITHUB
        Location: "https://github.com/alfredokeynua/test-project.git"
        GitCloneDepth: "1"
        BuildSpec: "buildspec.yml"
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:8.11.0
        EnvironmentVariables:
          - Name: S3_BUCKET
            Value: !ImportValue "CI-CD-ArtifactBucket"
          - Name: S3_BUILDS_PREFIX
            Value: !Sub "${AWS::StackName}/builds"
          - Name: S3_ARTIFACTS_PREFIX
            Value: !Sub "${AWS::StackName}/artifacts"
          - Name: SAM_TEMPLATE_IN
            Value: "samTemplate.yaml"
          - Name: SAM_TEMPLATE_OUT
            Value: "outputSamTemplate.yaml"
          - Name: PIPELINE_NAME_PREFIX
            Value: !Sub "${AWS::StackName}"
      TimeoutInMinutes: 10
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}"

  # Create a pipeline that deploys to 'dev' when pushing to the 'dev' branch
  DevPipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: CreateDevelopmentAccountPipeline
    Properties:
      Name: !Sub "${AWS::StackName}-dev-pipeline"
      RoleArn: !ImportValue "CI-CD-CodePipelineServiceRoleArn"
      ArtifactStore:
        Type: S3
        Location: !ImportValue "CI-CD-ArtifactBucket"
        EncryptionKey:
          Id: !ImportValue "CI-CD-KMSKey"
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: S3
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                  S3Bucket: !ImportValue "CI-CD-ArtifactBucket"
                  S3ObjectKey: !Sub "${AWS::StackName}/artifacts/dev.zip"
                  PollForSourceChanges: false
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        - Name: DeployToDev
          Actions:
            - Name: CreateChangeSet
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Sub "${AWS::StackName}-dev"
                ChangeSetName: !Sub "${AWS::StackName}-dev-change-set"
                ActionMode: "CHANGE_SET_REPLACE"
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::outputSamTemplate.yaml
                RoleArn: !Sub "arn:aws:iam::${DevelopmentAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
                ParameterOverrides: !Sub |
                  {
                    "EnvName": "dev"
                  }
              RunOrder: 1
              RoleArn: !Sub "arn:aws:iam::${DevelopmentAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"

            - Name: DeployChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Sub "${AWS::StackName}-dev"
                ChangeSetName: !Sub "${AWS::StackName}-dev-change-set"
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub "arn:aws:iam::${DevelopmentAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${DevelopmentAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"


  # Create a pipeline that deploys to 'int' when pushing to the 'master' branch
  IntPipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: CreateIntegrationAccountPipeline
    Properties:
      Name: !Sub "${AWS::StackName}-int-pipeline"
      RoleArn: !ImportValue "CI-CD-CodePipelineServiceRoleArn"
      ArtifactStore:
        Type: S3
        Location: !ImportValue "CI-CD-ArtifactBucket"
        EncryptionKey:
          Id: !ImportValue "CI-CD-KMSKey"
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: S3
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                  S3Bucket: !ImportValue "CI-CD-ArtifactBucket"
                  S3ObjectKey: !Sub "${AWS::StackName}/artifacts/int.zip"
                  PollForSourceChanges: false
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        - Name: DeployToInt
          Actions:
            - Name: CreateChangeSet
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Sub "${AWS::StackName}-int"
                ChangeSetName: !Sub "${AWS::StackName}-int-change-set"
                ActionMode: "CHANGE_SET_REPLACE"
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::outputSamTemplate.yaml
                RoleArn: !Sub "arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
                ParameterOverrides: !Sub |
                  {
                    "EnvName": "int"
                  }
              RunOrder: 1
              RoleArn: !Sub "arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"

            - Name: DeployChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Sub "${AWS::StackName}-int"
                ChangeSetName: !Sub "${AWS::StackName}-int-change-set"
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub "arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"

  # Create a pipeline that deploys to 'stg' and 'prod' when pushing to the 'release-*' branch
  DevPipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: CreateStagingAccountPipeline
    Properties:
      Name: !Sub "${AWS::StackName}-prod-pipeline"
      RoleArn: !ImportValue "CI-CD-CodePipelineServiceRoleArn"
      ArtifactStore:
        Type: S3
        Location: !ImportValue "CI-CD-ArtifactBucket"
        EncryptionKey:
          Id: !ImportValue "CI-CD-KMSKey"
          Type: KMS
      Stages:
        - Name: Source
          Actions:
            - Name: S3
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                  S3Bucket: !ImportValue "CI-CD-ArtifactBucket"
                  S3ObjectKey: !Sub "${AWS::StackName}/artifacts/prod.zip"
                  PollForSourceChanges: false
              OutputArtifacts:
                - Name: BuildOutput
              RunOrder: 1

        - Name: DeployToStg
          Actions:
            - Name: CreateChangeSet
              InputArtifacts:
                - Name: BuildOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Sub "${AWS::StackName}-stg"
                ChangeSetName: !Sub "${AWS::StackName}-stg-change-set"
                ActionMode: "CHANGE_SET_REPLACE"
                Capabilities: CAPABILITY_NAMED_IAM
                TemplatePath: BuildOutput::outputSamTemplate.yaml
                RoleArn: !Sub "arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
                ParameterOverrides: !Sub |
                  {
                    "EnvName": "stg"
                  }
              RunOrder: 1
              RoleArn: !Sub "arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"

            - Name: DeployChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                StackName: !Sub "${AWS::StackName}-stg"
                ChangeSetName: !Sub "${AWS::StackName}-stg-change-set"
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !Sub "arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
              InputArtifacts:
                - Name: BuildOutput
              RunOrder: 2
              RoleArn: !Sub "arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"

        - !If
          - CreateProductionAccountPipeline
          - Name: DeployToProd
            Actions:
              - Name: CreateChangeSet
                InputArtifacts:
                  - Name: BuildOutput
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  StackName: !Sub "${AWS::StackName}-prod"
                  ChangeSetName: !Sub "${AWS::StackName}-prod-change-set"
                  ActionMode: "CHANGE_SET_REPLACE"
                  Capabilities: CAPABILITY_NAMED_IAM
                  TemplatePath: BuildOutput::outputSamTemplate.yaml
                  RoleArn: !Sub "arn:aws:iam::${ProductionAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
                  ParameterOverrides: !Sub |
                    {
                      "EnvName": "prod"
                    }
                RunOrder: 1
                RoleArn: !Sub "arn:aws:iam::${ProductionAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"

              - Name: DeployChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Version: 1
                  Provider: CloudFormation
                Configuration:
                  StackName: !Sub "${AWS::StackName}-prod"
                  ChangeSetName: !Sub "${AWS::StackName}-prod-change-set"
                  ActionMode: CHANGE_SET_EXECUTE
                  RoleArn: !Sub "arn:aws:iam::${ProductionAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
                InputArtifacts:
                  - Name: BuildOutput
                RunOrder: 2
                RoleArn: !Sub "arn:aws:iam::${ProductionAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole"
          - !Ref AWS::NoValue

#  Pipeline:
#    Type: AWS::CodePipeline::Pipeline
#    Properties:
#      RoleArn: !ImportValue "CI-CD-CodePipelineServiceRoleArn"
#      Name: !Ref ProjectName
#      ArtifactStore:
#        Type: S3
#        Location: !ImportValue "CI-CD-ArtifactBucket"
#        EncryptionKey:
#          Id: !ImportValue "CI-CD-KMSKey"
#          Type: KMS
#      Stages:
#        - Name: Source
#          Actions:
#            - Name: Github
#              ActionTypeId:
#                Category: Source
#                Owner: ThirdParty
#                Version: 1
#                Provider: GitHub
#              Configuration:
#                  Owner: !Ref GitHubUser
#                  Repo: !Ref GitHubRepository
#                  Branch: !Ref GitHubBranch
#                  OAuthToken: !Ref GitHubOAuthToken
#                  PollForSourceChanges: false
#              OutputArtifacts:
#                - Name: SourceCodeCheckout
#              RunOrder: 1
#
#        - Name: Build
#          Actions:
#            - Name: Build
#              InputArtifacts:
#                - Name: SourceCodeCheckout
#              ActionTypeId:
#                Category: Build
#                Owner: AWS
#                Version: 1
#                Provider: CodeBuild
#              Configuration:
#                ProjectName: !Ref CodeBuildProject
#              RunOrder: 1
#              OutputArtifacts:
#                - Name: BuildOutput
#
#        - Name: DeployToInt
#          Actions:
#            - Name: CreateChangeSet
#              InputArtifacts:
#                - Name: BuildOutput
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: CloudFormation
#              Configuration:
#                ChangeSetName: !Sub "${ProjectName}-change-set-int"
#                ActionMode: "CHANGE_SET_REPLACE"
#                StackName: !Sub "${ProjectName}-int"
#                Capabilities: CAPABILITY_NAMED_IAM
#                TemplatePath: BuildOutput::outputSamTemplate.yaml
#                RoleArn: !Sub "arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole"
#                ParameterOverrides: !Sub |
#                  {
#                    "EnvName": "int"
#                  }
#              RunOrder: 1
#              RoleArn: !Sub arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole
#
#            - Name: DeployChangeSetInt
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: CloudFormation
#              Configuration:
#                ChangeSetName: !Sub ${ProjectName}-int-change-set
#                ActionMode: CHANGE_SET_EXECUTE
#                StackName: !Sub ${ProjectName}-int
#                RoleArn: !Sub arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole
#              InputArtifacts:
#                - Name: BuildOutput
#              RunOrder: 2
#              RoleArn: !Sub arn:aws:iam::${IntegrationAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole
#
#        - Name: DeployToStaging
#          Actions:
#            - Name: CreateChangeSetStg
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: CloudFormation
#              Configuration:
#                ChangeSetName: !Sub ${ProjectName}-stg-change-set
#                ActionMode: CHANGE_SET_REPLACE
#                StackName: !Sub ${ProjectName}-stg
#                Capabilities: CAPABILITY_NAMED_IAM
#                TemplatePath: BuildOutput::outputSamTemplate.yaml
#                ParameterOverrides: !Sub |
#                  {
#                    "EnvName": "THIS_IS_STAGING"
#                  }
#                RoleArn: !Sub arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole
#              InputArtifacts:
#                - Name: BuildOutput
#              RunOrder: 1
#              RoleArn: !Sub arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole
#
#            - Name: DeployChangeSetStg
#              ActionTypeId:
#                Category: Deploy
#                Owner: AWS
#                Version: 1
#                Provider: CloudFormation
#              Configuration:
#                ChangeSetName: !Sub ${ProjectName}-stg-change-set
#                ActionMode: CHANGE_SET_EXECUTE
#                StackName: !Sub ${ProjectName}-stg
#                RoleArn: !Sub arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationExecutionRole
#              InputArtifacts:
#                - Name: BuildOutput
#              RunOrder: 2
#              RoleArn: !Sub arn:aws:iam::${StagingAccountId}:role/OpsAccountCodePipelineCloudFormationServiceRole
#
